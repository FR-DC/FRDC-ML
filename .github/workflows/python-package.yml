# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up gcloud
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.FRDC_DOWNLOAD_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest poetry
          poetry export --with dev --without-hashes -o requirements.txt
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#      - name: Test with pytest
##        env:
##          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
#        run: |
#          pytest

      - name: Report accuracy
        run: |
          ACCURACY=$(0.95)  # Assuming this script returns your accuracy
          AUTHOR=$(jq --raw-output .pull_request.user.login "$GITHUB_EVENT_PATH")
          COMMENT="Hello ${AUTHOR}, the accuracy of your model was ${ACCURACY}."
          PR=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
          REPO_FULLNAME=$(jq -r ".repository.full_name" "$GITHUB_EVENT_PATH")
          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/"$REPO_FULLNAME"/issues/"$PR"/comments \
            -d "{\"body\": \"$COMMENT\"}"
